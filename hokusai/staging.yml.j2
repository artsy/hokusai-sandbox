---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ project_name }}-web
  namespace: default
  labels:
    app: {{ project_name }}
    component: web
    layer: application
    app.kubernetes.io/version: staging
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ project_name }}
      component: web
      layer: application
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ project_name }}
        component: web
        layer: application
        app.kubernetes.io/version: staging
      name: {{ project_name }}-web
    spec:
      containers:
        - name: {{ project_name }}-web
          env:
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/version']
          envFrom:
            - configMapRef:
                name: {{ project_name }}-environment
          image: {{ project_repo }}:staging
          ports:
            - name: http
              containerPort: 8080
{% filter indent(width=6, first=True) %}{% include 'templates/dns.yml.j2' %}{% endfilter %}

---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ project_name }}-web
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ project_name }}-web
  minReplicas: 1
  maxReplicas: 2
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 1800
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 70
        type: Utilization
    type: Resource

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: {{ project_name }}
    component: web
    layer: application
  name: {{ project_name }}-web-internal
  namespace: default
spec:
  ports:
    - port: 8080
      protocol: TCP
      name: http
      targetPort: http
  selector:
    app: {{ project_name }}
    layer: application
    component: web
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ project_name }}
  annotations:
    nginx.ingress.kubernetes.io/whitelist-source-range: "{{ externalIngressAllowSourceIP|join(',') }}"
spec:
  ingressClassName: nginx
  rules:
    - host: {{ project_name }}-staging.artsy.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              serviceName: {{ project_name }}-web-internal
              servicePort: http

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ project_name }}-cron
spec:
  schedule: "23 09 * * MON"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: {{ project_name }}-cron
              image: {{ project_repo }}:staging
              imagePullPolicy: Always
              envFrom:
                - configMapRef:
                    name: {{ project_name }}-environment
              args: ["hostname"]
          restartPolicy: Never
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: tier
                        operator: In
                        values:
                          - background
